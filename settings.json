{
  // Terminal Configuration
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash",
      "icon": "terminal-bash"
    }
  },
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.cursorBlinking": true,
  
  // Git Configuration
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.autofetch": true,
<<<<<<< HEAD
  "git.defaultCloneDirectory": "C:\\repos",
  "git.enableCommitSigning": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.codeLens.enabled": false,
=======
  "git.autofetchPeriod": 180,
  "git.autoStash": true,
  "git.branchProtection": ["main", "master", "develop"],
  "git.branchSortOrder": "committerdate",
  "git.confirmEmptyCommits": false,
  "git.defaultCloneDirectory": "C:\\repos",
  "git.enableCommitSigning": false,
  "git.fetchOnPull": true,
  "git.followTagsWhenSync": true,
  "git.inputValidation": true,
  "git.inputValidationLength": 72,
  "git.inputValidationSubjectLength": 50,
  "git.mergeEditor": true,
  "git.openRepositoryInParentFolders": "always",
  "git.pruneOnFetch": true,
  "git.pullBeforeCheckout": true,
  "git.rebaseWhenSync": false,
  "git.showProgress": true,
  "git.smartCommitChanges": "all",
  "git.suggestSmartCommit": true,
  "git.timeline.showAuthor": true,
  "git.untrackedChanges": "separate",
  "git.useForcePushWithLease": true,
  "git.verboseCommit": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.codeLens.enabled": false,
  "gitlens.blame.compact": true,
  "gitlens.blame.highlight.enabled": true,
  "gitlens.currentLine.enabled": true,
  "gitlens.currentLine.pullRequests.enabled": false,
  "gitlens.graph.layout": "editor",
  "gitlens.graph.minimap.enabled": true,
  "gitlens.statusBar.enabled": true,
>>>>>>> 9aba5cc (update: CLEANUP-001 Remove unused pre-commit.disabled file)
  
  // Ruby & InSpec Configuration
  "ruby.useLanguageServer": true,
  "ruby.lint": {
    "rubocop": true,
    "ruby": true
  },
  "ruby.format": "rubocop",
  "ruby.intellisense": "rubyLocate",
  "[ruby]": {
    "editor.defaultFormatter": "rebornix.ruby",
    "editor.formatOnSave": true,
    "editor.tabSize": 2,
    "editor.insertSpaces": true
  },
  "files.associations": {
    "*.rb": "ruby",
    "*.inspec": "ruby",
    "inspec.yml": "yaml",
    "inspec.lock": "yaml"
  },
  
  // Ansible Configuration
  "ansible.python.interpreterPath": "python",
  "ansible.validation.enabled": true,
  "ansible.validation.lint.enabled": true,
  "ansible.validation.lint.path": "ansible-lint",
  "ansible.autocompletion": true,
  "[ansible]": {
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    },
    "editor.tabSize": 2,
    "editor.insertSpaces": true
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.formatOnSave": true,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    }
  },
  "yaml.schemas": {
    "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible.json": [
      "*.yml",
      "*.yaml"
    ]
  },
  "yaml.customTags": [
    "!vault",
    "!encrypted/pkcs1-oaep",
    "!reference"
  ],
  
  // Shell Script Configuration
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format",
    "editor.tabSize": 2,
    "editor.insertSpaces": true
  },
  "shellformat.flag": "-i 2 -ci",
  "shellcheck.enable": true,
  "shellcheck.run": "onSave",
  "shellcheck.executablePath": "shellcheck",
  
  // PowerShell Configuration
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell",
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },
  "powershell.codeFormatting.preset": "OTBS",
  "powershell.integratedConsole.showOnStartup": false,
  
  // Editor Configuration
  "editor.fontSize": 14,
  "editor.fontFamily": "Cascadia Code, Consolas, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.renderWhitespace": "boundary",
  "editor.rulers": [80, 120],
  "editor.minimap.enabled": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": false,
  "editor.suggestSelection": "first",
  "editor.snippetSuggestions": "top",
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  
  // Files Configuration
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.eol": "\n",
  "files.exclude": {
    "**/.git": true,
    "**/.DS_Store": true,
    "**/node_modules": true,
    "**/__pycache__": true,
    "**/*.pyc": true
  },
  
  // Extensions Recommendations
  "extensions.ignoreRecommendations": false,
  
  // Workspace Configuration
  "workbench.colorTheme": "Dark+ (default dark)",
  "workbench.iconTheme": "vscode-icons",
  "workbench.startupEditor": "none",
  "workbench.editor.enablePreview": false,
  "workbench.editor.tabSizing": "shrink",
  
  // Remote Development
  "remote.SSH.defaultExtensions": [
    "rebornix.ruby",
    "redhat.ansible",
    "redhat.vscode-yaml",
    "ms-vscode.powershell",
    "foxundermoon.shell-format",
    "timonwong.shellcheck"
  ],
<<<<<<< HEAD
=======
  "remote.SSH.host": "your.remote.host",
  "remote.SSH.username": "your_username",
  "remote.SSH.password": "your_password",
  "remote.SSH.key": "path/to/your/private/key",
  "remote.SSH.port": 22,
>>>>>>> 9aba5cc (update: CLEANUP-001 Remove unused pre-commit.disabled file)
  
  // DevOps Tools Integration
  "docker.dockerPath": "docker",
  "docker.enableDockerComposeLanguageService": true,
  
  // Search Configuration
  "search.exclude": {
    "**/vendor": true,
    "**/bower_components": true,
    "**/.terraform": true,
    "**/target": true,
    "**/coverage": true
  },
  
  // InSpec Specific
  "inspec.executablePath": "inspec",
  
  // AAP/Tower Integration (if using extension)
  "ansibleTower.hostUrl": "",
  "ansibleTower.ignoreCerts": false
}